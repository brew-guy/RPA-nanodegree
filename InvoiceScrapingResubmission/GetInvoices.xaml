<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Diagnostics;assembly=System" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="In_dataFolder" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>955.6,1127.2</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="23">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="34">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: Read the last 30 unread emails from GMail account and save invoice attachments to a data folder inside the project folder.&#xA;Pre-condition: E-mail(s) must be sent to the GMail account with subject line &quot;Techno Computers&quot;. Attachments must be in pdf format and named using the convention of CustomerName_InvoiceDate_InvoiceNumber.pdf.&#xA;Post-action: Will create data folder for invoices if none exists and save found invoices in that folder for further processing." DisplayName="Read emails and save attachments" sap:VirtualizedContainerService.HintSize="935.6,1067.2" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="pwd" />
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="emails" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:GetPassword DisplayName="Get app password for GMail" sap:VirtualizedContainerService.HintSize="893.6,22" sap2010:WorkflowViewState.IdRef="GetPassword_1" ProtectedPassword="AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7KgWLeRuW0CTB69QMmklLgAAAAACAAAAAAAQZgAAAAEAACAAAAAIF8X03gs0v8dBZH2CJFiGsEwHU/a7s1GThmTBHeDHPwAAAAAOgAAAAAIAACAAAACbBzqEsx14a50VV7/vqQsTpCj+XyBkbqnqwsRLohtQ5RAAAADz3z7dtquOOhqu6zmaMKpbQAAAACjGc4VyASwKikjEbttHbApXdU3HB69xNDU5O7bHWVc4yQiNb85j2DiVl0m86QIQIP22ubbW06Ec+VCGJ0OZCHA=" Result="[pwd]" />
    <ui:GetIMAPMailMessages TimeoutMS="{x:Null}" DeleteMessages="False" DisplayName="Get IMAP Mail from GMail" Email="jes.hunsballe@gmail.com" EnableSSL="True" sap:VirtualizedContainerService.HintSize="893.6,22" sap2010:WorkflowViewState.IdRef="GetIMAPMailMessages_1" MailFolder="Inbox" MarkAsRead="True" Messages="[emails]" OnlyUnreadMessages="True" Password="[pwd]" Port="993" SecureConnection="Auto" Server="imap.gmail.com" Top="30" />
    <ui:ForEach x:TypeArguments="snm:MailMessage" CurrentIndex="{x:Null}" DisplayName="Scan and process unread e-mails" sap:VirtualizedContainerService.HintSize="893.6,773.6" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[emails]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="snm:MailMessage">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="mail" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="858,639.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[mail.Subject.Contains(&quot;Techno Computers&quot;)]" DisplayName="Save attachment if e-mail subject is â€œTechno Computers&quot;" sap:VirtualizedContainerService.HintSize="816,547.2" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <TryCatch DisplayName="Try saving attachments and catch exceptions" sap:VirtualizedContainerService.HintSize="437.6,397.2" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                  <TryCatch.Try>
                    <ui:SaveMailAttachments Attachments="{x:Null}" sap2010:Annotation.AnnotationText="Save email attachments to data folder. Regex filter is applied to ensure saving of only files that adhere to the expected naming convention (CustomerName_InvoiceDate_InvoiceNumber.pdf)." DisplayName="Save Attachments" Filter="[A-Za-z]+_[0-9]{8}_[0-9]+\.pdf" FolderPath="[In_dataFolder]" sap:VirtualizedContainerService.HintSize="334,164.8" sap2010:WorkflowViewState.IdRef="SaveMailAttachments_2" Message="[mail]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:SaveMailAttachments>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:AggregateException" sap:VirtualizedContainerService.HintSize="403.6,22.8" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:AggregateException">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:AggregateException" Name="exception" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Kill Acrobat Reader if found running" sap:VirtualizedContainerService.HintSize="598,1018" sap2010:WorkflowViewState.IdRef="Sequence_8">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="sco:Collection(sd:Process)" Name="processes" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Print that an exception occured" sap:VirtualizedContainerService.HintSize="556,93.6" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Warn" Message="[&quot;SystemException encountered: Attempt to save attachment failed because an existing pdf file could not be overwritten. Closing down any open Adobe windows.&quot;]" />
                          <ui:GetProcesses ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Get a list of all running processes on the computer." DisplayName="Get list of processes running" sap:VirtualizedContainerService.HintSize="556,66.8" sap2010:WorkflowViewState.IdRef="GetProcesses_2" Processes="[processes]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:GetProcesses>
                          <ui:ForEach x:TypeArguments="sd:Process" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Check all running processes to find open Acrobat Reader applications and ensure they are shut down so the code can proceed to save file attachments." DisplayName="Loop over all running processes" sap:VirtualizedContainerService.HintSize="556,685.6" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[processes]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="sd:Process">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="sd:Process" Name="process" />
                                </ActivityAction.Argument>
                                <If sap2010:Annotation.AnnotationText="If so, it will be shut down." Condition="[process.ToString.Contains(&quot;AcroRd32&quot;)]" DisplayName="Check if an Acrobat Reader process is found running" sap:VirtualizedContainerService.HintSize="520.4,506.4" sap2010:WorkflowViewState.IdRef="If_4">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence DisplayName="Stop process and print the process name" sap:VirtualizedContainerService.HintSize="376,325.2" sap2010:WorkflowViewState.IdRef="Sequence_7">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:KillProcess ProcessName="{x:Null}" sap2010:Annotation.AnnotationText="Kill the Acrobate Reader process and ignore errors, i.e. unsaved changes are gone! That'll teach ya!" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="334,99.6" sap2010:WorkflowViewState.IdRef="KillProcess_2" Process="[process]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:KillProcess>
                                      <ui:LogMessage DisplayName="Print that a process is shut down" sap:VirtualizedContainerService.HintSize="334,93.6" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Warn" Message="[&quot;An Acrobat Reader process had to be shut down: &quot; + process.ToString]" />
                                    </Sequence>
                                  </If.Then>
                                </If>
                              </ActivityAction>
                            </ui:ForEach.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ForEach>
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
              </If.Then>
              <If.Else>
                <ui:Comment DisplayName="Continue to next e-mail" sap:VirtualizedContainerService.HintSize="334,75.2" sap2010:WorkflowViewState.IdRef="Comment_1" Text="// go on to the next mail if the subject line was not right" />
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>